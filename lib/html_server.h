#ifndef HTML_SERVER_H
#define HTML_SERVER_H

const char *html_data =
"<!DOCTYPE html>\n"
"<html lang=\"pt-BR\">\n"
"<head>\n"
"  <meta charset=\"UTF-8\">\n"
"  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n"
"  <title>Estação de Monitoramento Meteorológico</title>\n"
"  <!-- Font Awesome para ícones -->\n"
"  <script src=\"https://kit.fontawesome.com/a076d05399.js\" crossorigin=\"anonymous\"></script>\n"
"  <!-- Chart.js para gráficos -->\n"
"  <script src=\"https://cdn.jsdelivr.net/npm/chart.js\"></script>\n"
"  <style>\n"
"    /* --- Seu CSS existente abaixo --- */\n"
"    body { margin:0; padding:0; font-family:'Segoe UI', Tahoma, sans-serif; background:#3b3b3b; color:#fff; }\n"
"    header { background:#2c5aa0; color:#fff; padding:20px; text-align:center; font-size:1.5rem; box-shadow:0 2px 5px rgba(0,0,0,0.3); }\n"
"    .subtitle { text-align:center; color:#ccc; margin:4px 0; font-size:0.9rem; }\n"
"    .container { max-width:800px; margin:20px auto; padding:0 15px; }\n"
"    .config-cards { display:flex; gap:20px; margin-bottom:40px; flex-wrap:wrap; }\n"
"    .config-card { background:#4f4f4f; flex:1 1 calc(33% - 20px); padding:15px; border-radius:8px; box-shadow:0 2px 5px rgba(0,0,0,0.3); display:flex; flex-direction:column; align-items:center; }\n"
"    .config-card label { color:#ccc; font-size:0.9rem; margin-bottom:8px; }\n"
"    .config-card input { width:80%; padding:6px; font-size:1rem; border-radius:4px; border:none; text-align:center; }\n"
"    .config-card span { margin-top:6px; color:#fff; font-size:1rem; }\n"
"    .botao { font-size:18px; padding:8px 20px; margin:20px auto 0; display:block; border:none; border-radius:8px; cursor:pointer; background:#4a90e2; color:#fff; }\n"
"    .cards { display:flex; flex-direction:column; gap:20px; margin-bottom:40px; }\n"
"    .card { background:#4f4f4f; display:flex; align-items:center; padding:20px; border-radius:8px; box-shadow:0 2px 5px rgba(0,0,0,0.3); }\n"
"    .card i { font-size:2.5rem; margin-right:15px; color:#4a90e2; }\n"
"    .card .info { font-size:1.2rem; }\n"
"    .charts { display:flex; flex-direction:column; gap:30px; }\n"
"    canvas { background:#4f4f4f; border-radius:8px; box-shadow:0 2px 5px rgba(0,0,0,0.3); padding:10px; }\n"
"    @media(max-width:768px) { .config-cards, .cards { flex-direction:column; } .config-card, .card { flex:1 1 100%; } }\n"
"  </style>\n"
"</head>\n"
"<body>\n"
"  <header>Estação de Monitoramento Meteorológico</header>\n"
"  <div class=\"subtitle\">Ilhéus - BA</div>\n"
"  <div class=\"subtitle\">EmbarcaTech - RESTIC37</div>\n"
"  <div class=\"container\">\n"
"    <section class=\"config-cards\">\n"
"      <div class=\"config-card\">\n"
"        <label>Temp. Max. (°C)</label>\n"
"        <input type=\"number\" id=\"input-maxTemp\" min=\"-50\" max=\"100\" step=\"0.1\">\n"
"        <span id=\"label-maxTemp\">--</span>\n"
"      </div>\n"
"      <div class=\"config-card\">\n"
"        <label>Umid. Min. (%)</label>\n"
"        <input type=\"number\" id=\"input-minHum\" min=\"0\" max=\"100\" step=\"0.1\">\n"
"        <span id=\"label-minHum\">--</span>\n"
"      </div>\n"
"      <div class=\"config-card\">\n"
"        <label>Calibração Temp (°C)</label>\n"
"        <input type=\"number\" id=\"input-calTemp\" min=\"-10\" max=\"10\" step=\"0.1\">\n"
"        <span id=\"label-calTemp\">--</span>\n"
"      </div>\n"
"      <button onclick=\"updateConfig()\" class=\"botao\">Atualizar Config</button>\n"
"    </section>\n"
"    <section class=\"cards\">\n"
"      <div class=\"card\">\n"
"        <i class=\"fas fa-thermometer-half\"></i>\n"
"        <div class=\"info\">Temperatura: <span id=\"temp-ath\">--</span> °C</div>\n"
"      </div>\n"
"      <div class=\"card\">\n"
"        <i class=\"fas fa-tint\"></i>\n"
"        <div class=\"info\">Umidade: <span id=\"umidade-ath\">--</span> %</div>\n"
"      </div>\n"
"      <div class=\"card\">\n"
"        <i class=\"fas fa-tachometer-alt\"></i>\n"
"        <div class=\"info\">Pressão: <span id=\"pressao-bmp\">--</span> hPa</div>\n"
"      </div>\n"
"    </section>\n"
"    <section class=\"charts\">\n"
"      <canvas id=\"chartTemp\" width=\"400\" height=\"200\"></canvas>\n"
"      <canvas id=\"chartHum\" width=\"400\" height=\"200\"></canvas>\n"
"      <canvas id=\"chartPress\" width=\"400\" height=\"200\"></canvas>\n"
"    </section>\n"
"  </div>\n"
"  <script>\n"
"    // Arrays para armazenar valores e labels\n"
"    const labels = [];\n"
"    const historyTemp = [];\n"
"    const historyHum = [];\n"
"    const historyPress = [];\n"
"\n"
"    // Configuração dos três gráficos\n"
"    const configTemp = {\n"
"      type: 'line',\n"
"      data: { labels, datasets: [{ label: 'Temperatura (°C)', data: historyTemp, fill: false, tension: 0.4, borderColor: '#fff' }] },\n"
"      options: { responsive: true, scales: { x: { ticks: { color: '#fff' } }, y: { ticks: { color: '#fff' }, title: { display: true, text: '°C', color: '#fff' } } }, plugins: { legend: { labels: { color: '#fff' } } } }\n"
"    };\n"
"    const configHum = {\n"
"      type: 'line',\n"
"      data: { labels, datasets: [{ label: 'Umidade (%)', data: historyHum, fill: false, tension: 0.4, borderColor: '#fff' }] },\n"
"      options: { responsive: true, scales: { x: { ticks: { color: '#fff' } }, y: { ticks: { color: '#fff' }, title: { display: true, text: '%', color: '#fff' } } }, plugins: { legend: { labels: { color: '#fff' } } } }\n"
"    };\n"
"    const configPress = {\n"
"      type: 'line',\n"
"      data: { labels, datasets: [{ label: 'Pressão (hPa)', data: historyPress, fill: false, tension: 0.4, borderColor: '#fff' }] },\n"
"      options: { responsive: true, scales: { x: { ticks: { color: '#fff' } }, y: { ticks: { color: '#fff' }, title: { display: true, text: 'hPa', color: '#fff' } } }, plugins: { legend: { labels: { color: '#fff' } } } }\n"
"    };\n"
"\n"
"    // Instancia os charts\n"
"    const chartTemp = new Chart(document.getElementById('chartTemp'), configTemp);\n"
"    const chartHum = new Chart(document.getElementById('chartHum'), configHum);\n"
"    const chartPress = new Chart(document.getElementById('chartPress'), configPress);\n"
"\n"
"    // Função que busca dados do servidor e atualiza UI e gráficos\n"
"    async function atualizar() {\n"
"      try {\n"
"        const res = await fetch('/estado');\n"
"        const data = await res.json();\n"
"\n"
"        // Atualiza textos\n"
"        document.getElementById('temp-ath').innerText    = data.temp_ath.toFixed(1);\n"
"        document.getElementById('umidade-ath').innerText = data.umidade_ath.toFixed(1);\n"
"        document.getElementById('pressao-bmp').innerText  = data.pressao_bmp.toFixed(1);\n"
"        document.getElementById('label-maxTemp').innerText = data.maxTemp.toFixed(1);\n"
"        document.getElementById('label-minHum').innerText  = data.minHum.toFixed(1);\n"
"        document.getElementById('label-calTemp').innerText= data.calTemp.toFixed(1);\n"
"\n"
"        // Atualiza histórico e gráficos\n"
"        const now = new Date().toLocaleTimeString();\n"
"        if (labels.length >= 5) { labels.shift(); historyTemp.shift(); historyHum.shift(); historyPress.shift(); }\n"
"        labels.push(now);\n"
"        historyTemp.push(data.temp_ath);\n"
"        historyHum.push(data.umidade_ath);\n"
"        historyPress.push(data.pressao_bmp);\n"
"        chartTemp.update(); chartHum.update(); chartPress.update();\n"
"      } catch (e) {\n"
"        console.error('Erro ao buscar /estado:', e);\n"
"      }\n"
"    }\n"
"\n"
"    // Função que envia novas configurações\n"
"    async function updateConfig() {\n"
"      const maxT = document.getElementById('input-maxTemp').value;\n"
"      const minH = document.getElementById('input-minHum').value;\n"
"      const calT = document.getElementById('input-calTemp').value;\n"
"      try {\n"
"        const res = await fetch(`/config?maxTemp=${maxT}&minHum=${minH}&calTemp=${calT}`);\n"
"        const cfg = await res.json();\n"
"        document.getElementById('label-maxTemp').innerText = cfg.maxTemp.toFixed(1);\n"
"        document.getElementById('label-minHum').innerText  = cfg.minHum.toFixed(1);\n"
"        document.getElementById('label-calTemp').innerText= cfg.calTemp.toFixed(1);\n"
"      } catch (e) {\n"
"        console.error('Erro ao atualizar /config:', e);\n"
"      }\n"
"    }\n"
"\n"
"    // Agendamentos\n"
"    setInterval(atualizar, 2000);\n"
"    window.onload = atualizar;\n"
"  </script>\n"
"</body>\n"
"</html>\n\";\n\n#endif\n";

#endif
